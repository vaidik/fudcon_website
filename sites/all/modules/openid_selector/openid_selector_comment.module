<?php
// $Id: openid_selector_comment.module,v 1.3 2011/02/04 16:48:27 agerasika Exp $

/**
 * @file
 * integrates OpenID Selector into comment form.
 * See http://www.gerixsoft.com/blog/drupal/openid-selector-comment
 *
 * @author: Andriy Gerasika <www.gerixsoft.com/contact>
 */

/**
 * Implementation of hook_form_alter().
 *
 * Adds OpenID Selector to the comment form.
 */
function openid_selector_comment_form_alter(&$form, $form_state, $form_id) {
  $forms = array(
    'comment_form' => 'comment-form',
  );
  if (array_key_exists($form_id, $forms)) {
    $library_path = libraries_get_path('openid-selector');
    $skin = variable_get('openid_selector_skin', '');
    if ($skin != '' && file_exists($library_path . '/css/openid-' . $skin . '.css')) {
      $skin = '-' . $skin;
    }
    drupal_add_css($library_path . '/css/openid' . $skin . '.css', 'module');
    $module_path = drupal_get_path('module', 'openid_selector_comment');
    drupal_add_js($module_path . '/openid_selector_comment.js');
    $settings = array(
      'img_path' => $library_path . '/images/',
    );
    drupal_add_js(array('openid_selector_comment' => $settings), 'setting');
  }
}

/**
 * Implementation of hook_menu().
 */
function openid_selector_comment_menu() {
  $items = array();
  $items['openid-selector/comment'] = array(
    'title' => 'Comment using OpenID',
    'access callback' => TRUE,
    'page callback' => 'openid_selector_comment_page',
    'type' => MENU_CALLBACK,
  );
  $items['openid-selector/comment/authenticate'] = array(
    'title' => 'Comment using OpenID authentication',
    'page callback' => 'openid_selector_comment_authenticate_page',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function openid_selector_comment(&$form_state) {
  $form['#validate'] = array('openid_login_validate');
  $form['openid_identifier'] = array(
    '#type' => 'textfield',
    '#title' => t('Log in using OpenID'),
    '#size' => 58,
    '#maxlength' => 255,
    '#weight' => -1,
    '#description' => l(t('What is OpenID?'), 'http://openid.net/', array('external' => TRUE)),
  );
  $form['submit'] = array('#type' => 'submit', '#value' => t('Sign-In'), '#weight' => 2);
  $form['openid.return_to'] = array('#type' => 'hidden', '#value' => url('openid-selector/comment/authenticate', array('absolute' => TRUE, 'query' => user_login_destination())));
  return $form;
}

function openid_selector_comment_page() {
  $form = drupal_get_form('openid_selector_comment');
  $module_path = drupal_get_path('module', 'openid_selector_comment');
  drupal_add_css($module_path . '/openid_selector_comment.css', 'module');
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php print $GLOBALS['language']->language ?>" lang="<?php print $GLOBALS['language']->language ?>" dir="<?php print $GLOBALS['language']->direction ? 'rtl' : 'ltr' ?>"
  xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://www.facebook.com/2008/fbml">
<head>
<?php
  print drupal_get_html_head();
  print '<title>' . drupal_get_title() . '</title>' . "\n";
  print drupal_get_css();
  print drupal_get_js();
?>
</head>
<body>
<?php
  print theme('status_messages');
  print $form;
  print theme('closure');
?>
</body>
</html>
<?php 
}

function openid_selector_comment_authenticate_page() {
  $result = openid_complete();
  switch ($result['status']) {
    case 'success':
      return openid_selector_comment_authenticate($result);
    case 'failed':
      drupal_set_message(t('OpenID login failed.'), 'error');
      break;
    case 'cancel':
      drupal_set_message(t('OpenID login cancelled.'));
      break;
    default:
      drupal_set_message($result['status']);
  }
  drupal_goto();
}

/**
 * Implementation of hook_openid_request_alter().
 */
function openid_selector_comment_openid_request_alter(&$request) {
  $ax = array(
    'required' => array(
      'blog' => 'contact/web/blog',
      'website' => 'contact/web/default',
    ),
    'if_available' => array(
    ),
  );
  openid_selector_ax_openid_request_alter_0($request, $ax);
}

function openid_selector_comment_authenticate($response) {
  module_load_include('inc', 'openid');
  drupal_alter('openid_response', $response);

  $identity = $response['openid.claimed_id'];

  $account = user_external_load($identity);
  if (isset($account->uid)) {
    $user_name = $account->name;
    $user_mail = $account->mail;
  }
  else {
    $ax_values = openid_extract_namespace($response, 'http://openid.net/srv/ax/1.0', 'ax');
    if ($ax_blog_value = openid_extract_ax_value($ax_values, 'contact/web/blog')) {
      $user_home = $ax_blog_value;
    }
    elseif ($ax_home_value = openid_extract_ax_value($ax_values, 'contact/web/default')) {
      $user_home = $ax_home_value;
    }
    $user_name = (empty($response['openid.sreg.nickname'])) ? '' : $response['openid.sreg.nickname'];
    $user_mail = (empty($response['openid.sreg.email'])) ? '' : $response['openid.sreg.email'];
  }  
    ?>
<html>
<script>
function fillin(user_name, user_mail, user_home) {
  if (user_name) {
  	window.opener.$('#edit-name').val(user_name);
  }
  if (user_mail) {
  	window.opener.$('#edit-mail').val(user_mail);
  }
  if (user_home) {
	window.opener.$('#edit-homepage').val(user_home);
  }
  window.close();
}
</script>
<body onload="fillin('<?php print $user_name ?>', '<?php print $user_mail ?>', '<?php print $user_home ?>')">
</body>
</html>
    <?php 
}
